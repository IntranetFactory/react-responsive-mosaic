{"version":3,"sources":["dnd/HTML5toTouch.js","dnd/useDragAndDrop.js","dnd/DraggableGridItem.js","grid/Grid.js","initialData.js","App.js","serviceWorker.js","index.js"],"names":["backends","backend","HTML5Backend","transition","MouseTransition","TouchBackend","options","enableMouseEvents","preview","TouchTransition","useDragAndDrop","ref","payload","useDrag","item","type","collect","monitor","isDragging","drag","useDrop","accept","hover","drop","DraggableGridItem","props","onDrop","children","p","useRef","opacity","createDragHoverCallback","GridItemWrapper","style","currentItem","otherItem","dragIndex","index","hoverIndex","hoverBoundingRect","current","getBoundingClientRect","hoverMiddleY","bottom","top","hoverMiddleX","right","left","clientOffset","getClientOffset","hoverClientY","y","hoverClientX","x","id","styled","div","Grid","gridRef","useEffect","grid","adjustGridItemsHeight","GridWrapper","items","i","length","rowHeight","parseInt","window","getComputedStyle","getPropertyValue","rowGap","rowSpan","Math","ceil","firstChild","height","gridRowEnd","initialItems","content","App","useState","list","setList","firstItemId","secondItemId","newList","firstItem","find","secondItem","firstIndex","DndProvider","MultiBackend","HTML5toTouch","AppWrapper","sort","sortItems","map","key","a","b","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac9319ee.chunk.js","sourcesContent":["import HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\nimport { TouchTransition, MouseTransition } from 'react-dnd-multi-backend';\n\n// HTML5 backend does not work on mobile/touch enabled devices,\n// and Touch backend is a little buggy in general.\n// Because of that, we need to use multi-backend with this configuration.\nexport default {\n  backends: [\n    {\n      backend: HTML5Backend,\n      transition: MouseTransition,\n    },\n    {\n      backend: TouchBackend,\n      options: {enableMouseEvents: true},\n      preview: true,\n      transition: TouchTransition,\n    },\n  ],\n};\n","import { useDrag, useDrop } from 'react-dnd';\n\nexport function useDragAndDrop(ref, payload) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'GRID_ITEM', ...payload },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, drop] = useDrop({\n    accept: 'GRID_ITEM',\n    hover: payload.hover\n  })\n\n  drag(drop(ref));\n\n  return {\n    isDragging\n  }\n}\n\nexport default { useDragAndDrop };\n","import React, { useRef } from 'react';\nimport { useDragAndDrop } from './useDragAndDrop';\nimport styled from 'styled-components';\n\nexport default function DraggableGridItem(props) {\n  const { item, onDrop, children, ...p } = props;\n  const ref = useRef(null);\n\n  const { isDragging } = useDragAndDrop(ref, {\n    ...item,\n    hover: createDragHoverCallback(ref, item, onDrop)\n  });\n\n  const opacity = isDragging ? 0 : 1;\n  return <GridItemWrapper {...p} ref={ref} style={{ opacity }}><div>{children}</div></GridItemWrapper>\n};\n\n// This was copied and adapted from react-dnd sortable example: https://react-dnd.github.io/react-dnd/examples/sortable/simple\n// Even though we are working with a grid, I decided to keep the items sorted as a list,\n// in order to avoid problems with different screen sizes and sorting.\n//\n// This function makes sure the `onDrop` action is only triggered after\n// the mouse has crossed half of the item`s height or width.\nconst createDragHoverCallback = (ref, currentItem, onDrop) => {\n  return (otherItem, monitor) => {\n    const dragIndex = otherItem.index;\n    const hoverIndex = currentItem.index;\n\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    const hoverBoundingRect = ref.current.getBoundingClientRect();\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    const hoverMiddleX = (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\n    const clientOffset = monitor.getClientOffset();\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n    const hoverClientX = clientOffset.x - hoverBoundingRect.right;\n\n    // Only perform the move when the mouse has crossed half of the items height or width\n    // When dragging downwards or right to left, only move when the cursor is below 50%\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY && hoverClientX < hoverMiddleX) {\n      return\n    }\n\n    // When dragging upwards or left to right, only move when the cursor is above 50%\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY && hoverClientX > hoverMiddleX) {\n      return\n    }\n\n    // Time to actually perform the action\n    // this is where you would want to reorder your list\n    // In case you wan't to use the whole object, don't forget to\n    // make a deep copy, because we are mutating the object on the last line\n    onDrop(otherItem.id, currentItem.id);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    otherItem.index = currentItem.index;\n    }\n}\n\nconst GridItemWrapper = styled.div `\n  width: auto;\n  min-width: 240px;\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #e0e0e0;\n  line-height: 1.2em;\n  word-wrap: break-word;\n  user-select: none;\n\n  &:hover {\n    box-shadow: 0 1px 2px 0 rgba(60,64,67,0.302),0 1px 3px 1px rgba(60,64,67,0.149);\n  }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nexport default function Grid(props) {\n  const gridRef = useRef(null);\n  const { children } = props;\n\n  useEffect(() => {\n    const grid = gridRef.current;\n    adjustGridItemsHeight(grid);\n  });\n\n  return (\n    <GridWrapper ref={gridRef}>\n      {children}\n    </GridWrapper>\n  );\n}\n\n// This function adjust each item in the grid accordlying\n// with their height.\n// Each item has to have an inner container, used to calculate\n// its overflow. Check GridItem component for an example.\nconst adjustGridItemsHeight = (grid) => {\n  const items = grid.children;\n\n  for (let i = 0; i < items.length; i++) {\n    let item = items[i];\n    let rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'));\n    let rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap'));\n    let rowSpan = Math.ceil((item.firstChild.getBoundingClientRect().height+rowGap)/(rowHeight+rowGap));\n    item.style.gridRowEnd = \"span \"+rowSpan;\n  }\n}\n\nconst GridWrapper = styled.div `\n  display: grid;\n  grid-gap: 15px;\n  grid-template-columns: repeat(auto-fill, minmax(240px,1fr));\n  grid-auto-rows: 180px;\n`;\n","const initialItems = [\n  { id: 1, index: 1, content: \"Tommy used to work on the docks, union's been on strike\" },\n  { id: 2, index: 2, content: \"He's down on his luck, it's tough, so tough            \" },\n  { id: 3, index: 3, content: \"Gina works the diner all day working for her man She brings home her pay, for love, for love She says, we've got to hold on to what we've got It doesn't make a difference if we make it or not We've got each other and that's a lot for love We'll give it a shot Woah, we're half way there Woah, livin' on a prayer Take my hand, we'll make it I swear Woah, livin' on a prayer\" },\n  { id: 4, index: 4, content: \"She brings home her pay, for love, for love            \" },\n  { id: 5, index: 5, content: \"She says, we've got to hold on to what we've got       \" },\n  { id: 6, index: 6, content: \"It doesn't make a difference if we make it or not      \" },\n  { id: 7, index: 7, content: \"We've got each other and that's a lot for love         \" },\n  { id: 8, index: 8, content: \"We'll give it a shot                                   \" },\n  { id: 9, index: 9, content: \"Woah, we're half way there                             \" },\n  { id: 10, index: 10, content: \"Woah, we're half way there Woah, livin' on a prayer Take my hand, we'll make it I swear Woah, livin' on a prayer Livin' on a prayer Oh, we've got to hold on, ready or not You live for the fight when it's all that you've got Woah, we're half way there Woah, livin' on a prayer Take my hand, we'll make it I swear Woah, livin' on a prayer Woah, we're half way there Woah, livin' on a prayer Take my hand, we'll make it I swear Woah, livin' on a prayer\" },\n  { id: 11, index: 11, content: \"Take my hand, we'll make it I swear                    \" },\n  { id: 12, index: 12, content: \"Once upon a time not so long ago Tommy used to work on the docks, union's been on strike He's down on his luck, it's tough, so tough Gina works the diner all day working for her man She brings home her pay, for love, for love She says, we've got to hold on to what we've got It doesn't make a difference if we make it or not We've got each other and that's a lot for love We'll give it a shot Woah, we're half way there Woah, livin' on a prayer Take my hand, we'll make it I swear Woah, livin' on a prayer Tommy's got his six-string in hock Now he's holding in what he used to make it talk So tough, it's tough Gina dreams of running away When she cries in the night, Tommy whispers Baby, it's okay, someday We've got to hold on to what we've got It doesn't make a difference if we make it or not We've got each other and that's a lot for love We'll give it a shot\" },\n  { id: 13, index: 13, content: \"Tommy's got his six-string in hock                     \" },\n  { id: 14, index: 14, content: \"Now he's holding in what he used to make it talk       \" },\n  { id: 15, index: 15, content: \"So tough, it's tough                                   \" },\n  { id: 16, index: 16, content: \"Gina dreams of running away                            \" },\n  { id: 17, index: 17, content: \"When she cries in the night, Tommy whispers            \" },\n  { id: 18, index: 18, content: \"Baby, it's okay, someday                               \" },\n  { id: 19, index: 19, content: \"We've got to hold on to what we've got                 \" },\n  { id: 20, index: 20, content: \"It doesn't make a difference if we make it or not      \" },\n  { id: 21, index: 21, content: \"We've got each other and that's a lot for love         \" },\n  { id: 22, index: 22, content: \"We'll give it a shot                                   \" },\n  { id: 23, index: 23, content: \"Woah, we're half way there                             \" },\n  { id: 24, index: 24, content: \"Woah, livin' on a prayer                               \" },\n  { id: 25, index: 25, content: \"Take my hand, we'll make it I swear                    \" },\n  { id: 26, index: 26, content: \"Woah, livin' on a prayer                               \" },\n  { id: 27, index: 27, content: \"Livin' on a prayer                                     \" },\n  { id: 28, index: 28, content: \"Oh, we've got to hold on, ready or not                 \" },\n  { id: 29, index: 29, content: \"You live for the fight when it's all that you've got   \" },\n  { id: 30, index: 30, content: \"Woah, we're half way there                             \" },\n  { id: 31, index: 31, content: \"Woah, livin' on a prayer                               \" },\n  { id: 32, index: 32, content: \"Take my hand, we'll make it I swear                    \" },\n  { id: 33, index: 33, content: \"Woah, livin' on a prayer                               \" },\n  { id: 34, index: 34, content: \"Woah, we're half way there                             \" },\n  { id: 35, index: 35, content: \"Woah, livin' on a prayer                               \" },\n  { id: 36, index: 36, content: \"Take my hand, we'll make it I swear                    \" },\n  { id: 37, index: 37, content: \"Woah, livin' on a prayer                               \" },\n  { id: 38, index: 38, content: \"Woah, we're half way there                             \" },\n  { id: 39, index: 39, content: \"Woah, livin' on a prayer                               \" },\n  { id: 40, index: 40, content: \"Take my hand, we'll make it I swear                    \" },\n  { id: 41, index: 41, content: \"Woah, livin' on a prayer                               \" },\n];\n\nexport default () => initialItems;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DndProvider } from 'react-dnd';\nimport MultiBackend from 'react-dnd-multi-backend';\nimport HTML5toTouch from './dnd/HTML5toTouch';\nimport DraggableGridItem from './dnd/DraggableGridItem';\nimport Grid from './grid/Grid';\nimport initialItems from './initialData';\n\nexport default function App() {\n  const [ list, setList ] = useState(initialItems);\n\n  const onDrop = (firstItemId, secondItemId) => {\n    let newList = [ ...list ];\n    let firstItem = newList.find(i => i.id === firstItemId);\n    let secondItem = newList.find(i => i.id === secondItemId);\n    const firstIndex = firstItem.index;\n    firstItem.index = secondItem.index;\n    secondItem.index = firstIndex;\n    setList(newList);\n  };\n\n  return (\n    <DndProvider backend={MultiBackend} options={HTML5toTouch}>\n      <AppWrapper>\n        <h1>Responsive Drag-and-Drop Grid</h1>\n        <Grid>\n          { list.sort(sortItems).map(item =>\n            <DraggableGridItem\n              key={item.id}\n              item={item}\n              onDrop={onDrop}\n            >{item.content}</DraggableGridItem>\n          )}\n        </Grid>\n      </AppWrapper>\n    </DndProvider>\n  );\n}\n\nconst sortItems = (a, b) => a.index - b.index;\n\nconst AppWrapper = styled.div `\n  padding: 10px 200px;\n\n  @media (max-width: 800px) {\n    padding: 10px;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}